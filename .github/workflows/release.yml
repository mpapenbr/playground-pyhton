on:
  workflow_dispatch:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        architecture: 'x64'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt



    - name: Prepare bootloader
      shell: bash
      # we need this step in order to get a "unique" installer signature that hopefully doesn't produce a virus warning
      # if this step is not done, many anti virus tools may complain with heuristic virus detection messages
      run: |
        pip install wheel
        CURDIR=$PWD && \
        mkdir -p tmp && cd tmp && \
        curl --location --remote-name https://github.com/pyinstaller/pyinstaller/archive/refs/tags/v4.5.1.tar.gz && \
        tar xfz v4.5.1.tar.gz && \
        cd pyinstaller-4.5.1/bootloader && \
        python ./waf all --target-arch=64bit && \
        cd $CURDIR
        cd tmp/pyinstaller-4.5.1 && python setup.py install

    - name: do local install
      run: |
        pip install -e .

    - name: Build pyinstaller
      run: |            
        pyinstaller --clean --noconfirm -F src/playground/__main__.py --name playground

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Prepare release asset
      shell: bash
      run: |
        mkdir -p assets && \
        cp ./dist/playground.exe assets && \
        cp ./README.rst assets
    
    - name: Create zip
      uses: papeloto/action-zip@v1
      with:
        files: assets/
        dest: playground.zip
        recursive: true # note: may be a bug. see https://github.com/vimtor/action-zip/issues/8
    
    - uses: actions/upload-artifact@v1
      with:
        name: my-artifact
        path: ${{ github.workspace }}/playground.zip

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./playground.zip
        asset_name: playground.zip
        asset_content_type: application/zip
